{"version":3,"sources":["Api.ts"],"names":["MAX_CONTENT_LENGTH","TIMER_DURATION","TIMEOUT","exponentClient","ApiError","ExtendableError","constructor","code","message","_rootBaseUrl","Config","api","scheme","host","_apiBaseUrl","rootBaseUrl","port","_callMethodAsync","url","method","requestBody","requestOptions","returnEntireResponse","clientId","Session","clientIdAsync","session","UserManager","getSessionAsync","skipValidationToken","process","env","headers","sessionSecret","options","maxContentLength","data","formData","convertedFormData","_convertFormDataToBuffer","getHeaders","response","axios","request","Error","responseBody","responseObj","JSON","parse","e","XDLError","err","serverError","Promise","resolve","pipe","encoding","_downloadAsync","outputPath","progressFunction","retryFunction","promptShown","currentProgress","cancel","token","CancelToken","source","warningTimer","setTimeout","tmpPath","config","timeout","responseType","cancelToken","totalDownloadSize","downloadProgress","on","chunk","length","roundedProgress","Math","floor","clearTimeout","fs","createWriteStream","rename","ApiClient","setClientName","name","callMethodAsync","methodName","args","encodeURIComponent","stringify","callPathAsync","path","xdlSchemaAsync","sdkVersion","_schemaCaches","hasOwnProperty","Cacher","join","__dirname","getAsync","downloadAsync","extract","dotExpoHomeDirectory","UserSettings","Extract","extractAsync","removeSync"],"mappings":"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","sourcesContent":["import path from 'path';\n\nimport axios, { AxiosRequestConfig, Canceler } from 'axios';\nimport concat from 'concat-stream';\nimport ExtendableError from 'es6-error';\nimport FormData from 'form-data';\nimport fs from 'fs-extra';\nimport { JSONObject } from '@expo/json-file';\nimport isString from 'lodash/isString';\n\nimport { Cacher } from './tools/FsCache';\nimport Config from './Config';\nimport * as Extract from './Extract';\nimport * as Session from './Session';\nimport UserManager from './User';\nimport UserSettings from './UserSettings';\nimport XDLError from './XDLError';\n\nconst MAX_CONTENT_LENGTH = 100 /* MB */ * 1024 * 1024;\n\nconst TIMER_DURATION = 30000;\nconst TIMEOUT = 3600000;\n\nlet exponentClient = 'xdl';\n\ntype HttpMethod = 'get' | 'post' | 'put' | 'delete';\ntype RequestOptions = AxiosRequestConfig & { formData?: FormData };\n\nclass ApiError extends ExtendableError {\n  code: string;\n  readonly _isApiError = true;\n  serverError: any;\n\n  constructor(code: string, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n\n// These aren't constants because some commands switch between staging and prod\nfunction _rootBaseUrl() {\n  return `${Config.api.scheme}://${Config.api.host}`;\n}\n\nfunction _apiBaseUrl() {\n  let rootBaseUrl = _rootBaseUrl();\n  if (Config.api.port) {\n    rootBaseUrl += ':' + Config.api.port;\n  }\n  return rootBaseUrl + '/--/api';\n}\n\nasync function _callMethodAsync(\n  url: string,\n  method: HttpMethod = 'get',\n  requestBody: any,\n  requestOptions: RequestOptions,\n  returnEntireResponse = false\n) {\n  const clientId = await Session.clientIdAsync();\n  const session = await UserManager.getSessionAsync();\n  const skipValidationToken = process.env['EXPO_SKIP_MANIFEST_VALIDATION_TOKEN'];\n\n  let headers: any = {\n    'Exp-ClientId': clientId,\n    'Exponent-Client': exponentClient,\n  };\n\n  if (skipValidationToken) {\n    headers['Exp-Skip-Manifest-Validation-Token'] = skipValidationToken;\n  }\n\n  if (session) {\n    headers['Expo-Session'] = session.sessionSecret;\n  }\n\n  let options: AxiosRequestConfig = {\n    url,\n    method,\n    headers,\n    maxContentLength: MAX_CONTENT_LENGTH,\n  };\n\n  if (requestBody) {\n    options = {\n      ...options,\n      data: requestBody,\n    };\n  }\n\n  if (requestOptions) {\n    if (requestOptions.formData) {\n      let convertedFormData = await _convertFormDataToBuffer(requestOptions.formData);\n      let { data } = convertedFormData;\n      options.headers = {\n        ...options.headers,\n        ...requestOptions.formData.getHeaders(),\n      };\n      options = { ...options, data };\n    } else {\n      options = { ...options, ...requestOptions };\n    }\n  }\n  let response = await axios.request(options);\n  if (!response) {\n    throw new Error('Unexpected error: Request failed.');\n  }\n  let responseBody = response.data;\n  var responseObj;\n  if (isString(responseBody)) {\n    try {\n      responseObj = JSON.parse(responseBody);\n    } catch (e) {\n      throw new XDLError(\n        'INVALID_JSON',\n        'Invalid JSON returned from API: ' + e + '. Response body: ' + responseBody\n      );\n    }\n  } else {\n    responseObj = responseBody;\n  }\n  if (responseObj.err) {\n    let err = new ApiError(\n      responseObj.code || 'API_ERROR',\n      'API Response Error: ' + responseObj.err\n    );\n    err.serverError = responseObj.err;\n    throw err;\n  } else {\n    return returnEntireResponse ? response : responseObj;\n  }\n}\n\nasync function _convertFormDataToBuffer(formData: FormData): Promise<{ data: Buffer }> {\n  return new Promise(resolve => {\n    formData.pipe(concat({ encoding: 'buffer' }, data => resolve({ data })));\n  });\n}\n\ntype ProgressCallback = (progressPercentage: number) => void;\ntype RetryCallback = (cancel: Canceler) => void;\n\nasync function _downloadAsync(\n  url: string,\n  outputPath: string,\n  progressFunction?: ProgressCallback,\n  retryFunction?: RetryCallback\n) {\n  let promptShown = false;\n  let currentProgress = 0;\n\n  let { cancel, token } = axios.CancelToken.source();\n\n  let warningTimer = setTimeout(() => {\n    if (retryFunction) {\n      retryFunction(cancel);\n    }\n    promptShown = true;\n  }, TIMER_DURATION);\n\n  const tmpPath = `${outputPath}.download`;\n  const config: AxiosRequestConfig = {\n    timeout: TIMEOUT,\n    responseType: 'stream',\n    cancelToken: token,\n  };\n  let response = await axios(url, config);\n  await new Promise(resolve => {\n    let totalDownloadSize = response.data.headers['content-length'];\n    let downloadProgress = 0;\n    response.data\n      .on('data', (chunk: Buffer) => {\n        downloadProgress += chunk.length;\n        const roundedProgress = Math.floor((downloadProgress / totalDownloadSize) * 100);\n        if (currentProgress !== roundedProgress) {\n          currentProgress = roundedProgress;\n          clearTimeout(warningTimer);\n          if (!promptShown) {\n            warningTimer = setTimeout(() => {\n              if (retryFunction) {\n                retryFunction(cancel);\n              }\n              promptShown = true;\n            }, TIMER_DURATION);\n          }\n          if (progressFunction) {\n            progressFunction(roundedProgress);\n          }\n        }\n      })\n      .on('end', () => {\n        clearTimeout(warningTimer);\n        if (progressFunction && currentProgress !== 100) {\n          progressFunction(100);\n        }\n        resolve();\n      })\n      .pipe(fs.createWriteStream(tmpPath));\n  });\n  await fs.rename(tmpPath, outputPath);\n}\n\nexport default class ApiClient {\n  static host: string = Config.api.host;\n  static port: number = Config.api.port || 80;\n\n  static _schemaCaches: { [version: string]: Cacher<JSONObject> } = {};\n\n  static setClientName(name: string) {\n    exponentClient = name;\n  }\n\n  static async callMethodAsync(\n    methodName: string,\n    args: any,\n    method?: HttpMethod,\n    requestBody?: any,\n    requestOptions: RequestOptions = {},\n    returnEntireResponse: boolean = false\n  ) {\n    let url =\n      _apiBaseUrl() +\n      '/' +\n      encodeURIComponent(methodName) +\n      '/' +\n      encodeURIComponent(JSON.stringify(args));\n    return _callMethodAsync(url, method, requestBody, requestOptions, returnEntireResponse);\n  }\n\n  static async callPathAsync(\n    path: string,\n    method?: HttpMethod,\n    requestBody?: any,\n    requestOptions: RequestOptions = {}\n  ) {\n    let url = _rootBaseUrl() + path;\n    return _callMethodAsync(url, method, requestBody, requestOptions);\n  }\n\n  static async xdlSchemaAsync(sdkVersion: string): Promise<JSONObject> {\n    if (!ApiClient._schemaCaches.hasOwnProperty(sdkVersion)) {\n      ApiClient._schemaCaches[sdkVersion] = new Cacher(\n        async () => {\n          return await ApiClient.callPathAsync(`/--/xdl-schema/${sdkVersion}`);\n        },\n        `schema-${sdkVersion}.json`,\n        0,\n        path.join(__dirname, `../caches/schema-${sdkVersion}.json`)\n      );\n    }\n\n    return await ApiClient._schemaCaches[sdkVersion].getAsync();\n  }\n\n  static async downloadAsync(\n    url: string,\n    outputPath: string,\n    { extract = false } = {},\n    progressFunction?: ProgressCallback,\n    retryFunction?: RetryCallback\n  ): Promise<void> {\n    if (extract) {\n      let dotExpoHomeDirectory = UserSettings.dotExpoHomeDirectory();\n      let tmpPath = path.join(dotExpoHomeDirectory, 'tmp-download-file');\n      await _downloadAsync(url, tmpPath);\n      await Extract.extractAsync(tmpPath, outputPath);\n      fs.removeSync(tmpPath);\n    } else {\n      await _downloadAsync(url, outputPath, progressFunction, retryFunction);\n    }\n  }\n}\n"],"file":"../Api.js","sourceRoot":"/@expo/xdl@56.2.1/src"}