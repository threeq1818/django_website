{"version":3,"sources":["ThirdParty.ts"],"names":["getManifest","publicUrl","opts","req","url","method","headers","Accept","exp","resp","axios","request","data","e","XDLError","toString","_extractManifest","platform","expOrArray","Array","isArray","sdkVersions","Versions","versionsAsync","i","length","manifestCandidate","sdkVersion","versionObj","isDeprecated","supportedVersions","Object","keys","JSON","stringify"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAEO,eAAeA,WAAf,CACLC,SADK,EAELC,IAA8C,GAAG,EAF5C,EAGL;AACA,QAAMC,GAAuB,GAAG;AAC9BC,IAAAA,GAAG,EAAEH,SADyB;AAE9BI,IAAAA,MAAM,EAAE,KAFsB;AAG9BC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAHqB,GAAhC;AAMA,MAAIC,GAAJ;;AACA,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMC,iBAAMC,OAAN,CAAcR,GAAd,CAAnB;AACAK,IAAAA,GAAG,GAAGC,IAAI,CAACG,IAAX;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACV,UAAM,KAAIC,mBAAJ,EACJ,kBADI,EAEH,iCAAgCb,SAAU,IAA3C,GAAiDY,CAAC,CAACE,QAAF,EAF7C,CAAN;AAID;;AACDP,EAAAA,GAAG,GAAG,MAAMQ,gBAAgB,CAACR,GAAD,EAAMP,SAAN,CAA5B;;AACA,MAAIC,IAAI,CAACe,QAAL,IAAiBT,GAAG,CAACS,QAAJ,KAAiBf,IAAI,CAACe,QAAvC,IAAmDf,IAAI,CAACe,QAAL,KAAkB,KAAzE,EAAgF;AAC9E,UAAM,KAAIH,mBAAJ,EACJ,kBADI,EAEH,iBAAgBb,SAAU,+BAA8BC,IAAI,CAACe,QAAS,WAFnE,CAAN;AAID;;AACD,SAAOT,GAAP;AACD,C,CAED;AACA;;;AACA,eAAeQ,gBAAf,CAAgCE,UAAhC,EAAiDjB,SAAjD,EAAoE;AAClE;AACA,MAAI,CAACkB,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAL,EAAgC;AAC9B,WAAOA,UAAP;AACD;;AAED,QAAM;AAAEG,IAAAA;AAAF,MAAkB,MAAMC,QAAQ,GAACC,aAAT,EAA9B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,UAAU,CAACO,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,UAAME,iBAAiB,GAAGR,UAAU,CAACM,CAAD,CAApC;AACA,UAAMG,UAAU,GAAGD,iBAAiB,CAACC,UAArC;;AACA,QAAI,CAACA,UAAL,EAAiB;AACf;AACD;;AACD,UAAMC,UAAU,GAAGP,WAAW,CAACM,UAAD,CAA9B;;AACA,QAAI,CAACC,UAAL,EAAiB;AACf;AACD;;AAED,UAAMC,YAAY,GAAGD,UAAU,CAACC,YAAX,IAA2B,KAAhD;;AACA,QAAI,CAACA,YAAL,EAAmB;AACjB,aAAOH,iBAAP;AACD;AACF;;AACD,QAAMI,iBAAiB,GAAGC,MAAM,CAACC,IAAP,CAAYX,WAAZ,CAA1B;AACA,QAAM,KAAIP,mBAAJ,EACJ,kBADI,EAEH,mCAAkCb,SAAU,mDAAkDgC,IAAI,CAACC,SAAL,CAC7FJ,iBAD6F,CAE7F,EAJE,CAAN;AAMD","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\nimport * as Versions from './Versions';\nimport XDLError from './XDLError';\n\nexport async function getManifest(\n  publicUrl: string,\n  opts: { platform?: 'android' | 'ios' | 'all' } = {}\n) {\n  const req: AxiosRequestConfig = {\n    url: publicUrl,\n    method: 'get',\n    headers: { Accept: 'application/expo+json,application/json' },\n  };\n\n  let exp;\n  try {\n    const resp = await axios.request(req);\n    exp = resp.data;\n  } catch (e) {\n    throw new XDLError(\n      'INVALID_MANIFEST',\n      `Unable to fetch manifest from ${publicUrl}. ` + e.toString()\n    );\n  }\n  exp = await _extractManifest(exp, publicUrl);\n  if (opts.platform && exp.platform !== opts.platform && opts.platform !== 'all') {\n    throw new XDLError(\n      'INVALID_MANIFEST',\n      `Manifest from ${publicUrl} is not compatible with the ${opts.platform} platform`\n    );\n  }\n  return exp;\n}\n\n// Third party publicUrls can return an array of manifests\n// We need to choose the first compatible one\nasync function _extractManifest(expOrArray: any, publicUrl: string) {\n  // if its not an array, assume it was a single manifest obj\n  if (!Array.isArray(expOrArray)) {\n    return expOrArray;\n  }\n\n  const { sdkVersions } = await Versions.versionsAsync();\n  for (let i = 0; i < expOrArray.length; i++) {\n    const manifestCandidate = expOrArray[i];\n    const sdkVersion = manifestCandidate.sdkVersion;\n    if (!sdkVersion) {\n      continue;\n    }\n    const versionObj = sdkVersions[sdkVersion];\n    if (!versionObj) {\n      continue;\n    }\n\n    const isDeprecated = versionObj.isDeprecated || false;\n    if (!isDeprecated) {\n      return manifestCandidate;\n    }\n  }\n  const supportedVersions = Object.keys(sdkVersions);\n  throw new XDLError(\n    'INVALID_MANIFEST',\n    `No compatible manifest found at ${publicUrl}. Please use one of the SDK versions supported: ${JSON.stringify(\n      supportedVersions\n    )}`\n  );\n}\n"],"file":"../ThirdParty.js","sourceRoot":"/@expo/xdl@56.2.1/src"}