{"version":3,"sources":["createWebpackCompiler.ts"],"names":["CONSOLE_TAG","SHOULD_CLEAR_CONSOLE","log","projectRoot","message","showInDevtools","ProjectUtils","logInfo","console","logWarning","logError","printInstructions","appName","urls","chalk","bold","lanUrlForTerminal","localUrlForTerminal","printPreviewNotice","underline","yellow","createWebpackCompiler","config","nonInteractive","useYarn","webpackFactory","onFinished","compiler","hooks","invalid","tap","isFirstCompile","done","stats","statsData","toJson","all","warnings","errors","messages","isSuccessful","length","printSuccessMessages","red","join","cyan"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport chalk from 'chalk';\nimport clearConsole from 'react-dev-utils/clearConsole';\nimport formatWebpackMessages from 'react-dev-utils/formatWebpackMessages';\nimport { Urls } from 'react-dev-utils/WebpackDevServerUtils';\nimport webpack from 'webpack';\n\nimport * as ProjectUtils from './project/ProjectUtils';\nimport { logEnvironmentInfo, shouldWebpackClearLogs } from './Web';\n\nconst CONSOLE_TAG = 'expo';\n\nconst SHOULD_CLEAR_CONSOLE = shouldWebpackClearLogs();\n\nfunction log(projectRoot: string, message: string, showInDevtools = true) {\n  if (showInDevtools) {\n    ProjectUtils.logInfo(projectRoot, CONSOLE_TAG, message);\n  } else {\n    console.log(message);\n  }\n}\n\nfunction logWarning(projectRoot: string, message: string) {\n  ProjectUtils.logWarning(projectRoot, CONSOLE_TAG, message);\n}\n\nfunction logError(projectRoot: string, message: string) {\n  ProjectUtils.logError(projectRoot, CONSOLE_TAG, message);\n}\n\nfunction printInstructions(\n  projectRoot: string,\n  appName: string,\n  urls: Urls,\n  showInDevtools: boolean\n) {\n  let message = `You can now view ${chalk.bold(appName)} in the browser.\\n\\n`;\n  if (urls.lanUrlForTerminal) {\n    message += `  ${chalk.bold('Local:')}            ${urls.localUrlForTerminal}\\n`;\n    message += `  ${chalk.bold('On Your Network:')}  ${urls.lanUrlForTerminal}\\n`;\n  } else {\n    message += `  ${urls.localUrlForTerminal}\\n`;\n  }\n\n  message += `\\nNote that the development build is not optimized. To create a production build, use ${chalk.bold(\n    `expo build:web`\n  )}.`;\n  log(projectRoot, message, showInDevtools);\n}\n\nexport function printPreviewNotice(projectRoot: string, showInDevtools: boolean) {\n  log(\n    projectRoot,\n    chalk.underline.yellow(\n      '\\nWeb support in Expo is experimental and subject to breaking changes. Do not use this in production yet.'\n    ),\n    showInDevtools\n  );\n}\n\nexport default function createWebpackCompiler({\n  projectRoot,\n  appName,\n  config,\n  urls,\n  nonInteractive,\n  useYarn,\n  webpackFactory,\n  onFinished,\n}: {\n  projectRoot: string;\n  appName: string;\n  config: webpack.Configuration;\n  urls: Urls;\n  nonInteractive?: boolean;\n  useYarn: boolean;\n  webpackFactory: (options?: webpack.Configuration) => webpack.Compiler;\n  onFinished: (() => void);\n}) {\n  // \"Compiler\" is a low-level interface to Webpack.\n  // It lets us listen to some events and provide our own custom messages.\n  const compiler = webpackFactory(config);\n\n  // \"invalid\" event fires when you have changed a file, and Webpack is\n  // recompiling a bundle. WebpackDevServer takes care to pause serving the\n  // bundle, so if you refresh, it'll wait instead of serving the old one.\n  // \"invalid\" is short for \"bundle invalidated\", it doesn't imply any errors.\n  compiler.hooks.invalid.tap('invalid', () => {\n    if (SHOULD_CLEAR_CONSOLE && !nonInteractive) {\n      clearConsole();\n    }\n    log(projectRoot, '\\nCompiling...');\n  });\n\n  let isFirstCompile = true;\n\n  // \"done\" event fires when Webpack has finished recompiling the bundle.\n  // Whether or not you have warnings or errors, you will get this event.\n  compiler.hooks.done.tap('done', async stats => {\n    if (SHOULD_CLEAR_CONSOLE && !nonInteractive) {\n      clearConsole();\n    }\n\n    // We have switched off the default Webpack output in WebpackDevServer\n    // options so we are going to \"massage\" the warnings and errors and present\n    // them in a readable focused way.\n    // We only construct the warnings and errors for speed:\n    // https://github.com/facebook/create-react-app/issues/4492#issuecomment-421959548\n    const statsData = stats.toJson({\n      all: false,\n      warnings: true,\n      errors: true,\n    });\n\n    const messages = formatWebpackMessages(statsData);\n\n    const isSuccessful = !messages.errors.length && !messages.warnings.length;\n    if (isSuccessful) {\n      printSuccessMessages({ projectRoot, appName, urls, config, isFirstCompile, nonInteractive });\n    }\n\n    if (!isFirstCompile) {\n      log(\n        projectRoot,\n        `Press ${chalk.bold('?')} to show a list of all available commands.\\n`,\n        false\n      );\n    }\n\n    onFinished();\n    isFirstCompile = false;\n\n    // If errors exist, only show errors.\n    if (messages.errors.length) {\n      // Only keep the first error. Others are often indicative\n      // of the same problem, but confuse the reader with noise.\n      if (messages.errors.length > 1) {\n        messages.errors.length = 1;\n      }\n      logError(projectRoot, chalk.red('Failed to compile.\\n') + messages.errors.join('\\n\\n'));\n      return;\n    }\n\n    // Show warnings if no errors were found.\n    if (messages.warnings.length) {\n      logWarning(\n        projectRoot,\n        chalk.yellow('Compiled with warnings.\\n') + messages.warnings.join('\\n\\n')\n      );\n    }\n  });\n\n  return compiler;\n}\n\nexport function printSuccessMessages({\n  projectRoot,\n  appName,\n  urls,\n  config,\n  isFirstCompile,\n  nonInteractive,\n}: {\n  projectRoot: string;\n  appName: string;\n  config: webpack.Configuration;\n  urls: Urls;\n  isFirstCompile: boolean;\n  nonInteractive?: boolean;\n}) {\n  log(projectRoot, chalk.bold.cyan(`Compiled successfully!`));\n  printPreviewNotice(projectRoot, isFirstCompile);\n  logEnvironmentInfo(projectRoot, CONSOLE_TAG, config);\n\n  if (!nonInteractive || isFirstCompile) {\n    printInstructions(projectRoot, appName, urls, isFirstCompile);\n  }\n}\n"],"file":"../createWebpackCompiler.js","sourceRoot":"/@expo/xdl@56.2.1/src"}