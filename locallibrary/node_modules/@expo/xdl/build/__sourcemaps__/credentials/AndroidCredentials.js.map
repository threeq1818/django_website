{"version":3,"sources":["credentials/AndroidCredentials.ts"],"names":["log","logger","global","NEWLINE","process","platform","javaExecutable","exportCertBinary","keystorePath","keystorePassword","keyAlias","certFile","err","code","warn","info","exportCertBase64","exportPrivateKey","keyPassword","encryptionKey","outputPath","nodePty","ptyTmpDir","require","fs","mkdirp","cwd","stdio","chalk","cyan","Error","ptySpawn","spawn","encryptToolPath","path","join","UserSettings","dotExpoHomeDirectory","existsSync","downloadUrl","file","createWriteStream","response","url","method","responseType","bar","ProgressBar","complete","incomplete","width","total","parseInt","headers","data","pipe","on","chunk","tick","length","Promise","resolve","reject","res","rej","child","name","cols","rows","env","error","exitCode","write","remove","logKeystoreHashes","keystoreInfo","linePrefix","readFile","googleHash","crypto","createHash","update","digest","toUpperCase","googleHash256","fbHash","replace","stdout","stderr","unlink","logKeystoreCredentials","title","bold","createKeystore","androidPackage","generateUploadKeystore","uploadKeystorePath","experienceName","keystoreData","Buffer","from","toString"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport path from 'path';\n\nimport fs from 'fs-extra';\nimport chalk from 'chalk';\nimport crypto from 'crypto';\nimport uuidv4 from 'uuid/v4';\nimport spawnAsync, { SpawnResult } from '@expo/spawn-async';\nimport axios from 'axios';\nimport ProgressBar from 'progress';\n\nimport logger from '../Logger';\nimport UserSettings from '../UserSettings';\n\nconst log = logger.global;\nconst NEWLINE = process.platform === 'win32' ? '\\r\\n' : '\\n';\nconst javaExecutable = process.platform === 'win32' ? 'java.exe' : 'java';\n\nexport type Keystore = {\n  keystore: string,\n  keystorePassword: string,\n  keyPassword: string,\n  keyAlias: string,\n};\n\ntype KeystoreInfo = {\n  keystorePath: string,\n  keystorePassword: string,\n  keyPassword: string,\n  keyAlias: string,\n};\n\n\nexport async function exportCertBinary(\n  { keystorePath, keystorePassword, keyAlias }: KeystoreInfo,\n  certFile: string,\n): Promise<SpawnResult> {\n  try {\n    return spawnAsync('keytool', [\n      '-exportcert',\n      '-keystore',\n      keystorePath,\n      '-storepass',\n      keystorePassword,\n      '-alias',\n      keyAlias,\n      '-file',\n      certFile,\n      '-noprompt',\n      '-storetype',\n      'JKS',\n    ]);\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      log.warn('Are you sure you have keytool installed?');\n      log.info('keytool is a part of OpenJDK: https://openjdk.java.net/');\n      log.info('Also make sure that keytool is in your PATH after installation.');\n    }\n    throw err;\n  }\n}\n\nexport async function exportCertBase64(\n  { keystorePath, keystorePassword, keyAlias }: KeystoreInfo,\n  certFile: string,\n): Promise<SpawnResult> {\n  try {\n    return spawnAsync('keytool', [\n      '-export',\n      '-rfc',\n      '-keystore',\n      keystorePath,\n      '-storepass',\n      keystorePassword,\n      '-alias',\n      keyAlias,\n      '-file',\n      certFile,\n      '-noprompt',\n      '-storetype',\n      'JKS',\n    ]);\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      log.warn('Are you sure you have keytool installed?');\n      log.info('keytool is a part of OpenJDK: https://openjdk.java.net/');\n      log.info('Also make sure that keytool is in your PATH after installation.');\n    }\n    throw err;\n  }\n}\n\nexport async function exportPrivateKey(\n  { keystorePath, keystorePassword, keyAlias, keyPassword }: KeystoreInfo,\n  encryptionKey: string,\n  outputPath: string,\n) {\n  let nodePty;\n  const ptyTmpDir = '/tmp/pty-tmp-install';\n  try {\n    // it's not very pretty solution, but we decided to use it because it's affecting only people using\n    // this command and if node-pty is supported on that system instalation process will be invisble for user.\n    nodePty = require('node-pty-prebuilt');\n  } catch (err) {\n    try {\n      log.info('Installing node-pty-prebuilt in a temporary directory');\n      await fs.mkdirp(ptyTmpDir);\n      await spawnAsync('npm', ['init', '--yes'], { cwd: ptyTmpDir });\n      await spawnAsync('npm', ['install', 'node-pty-prebuilt'], {\n        cwd: ptyTmpDir,\n        stdio: ['pipe', 1, 2],\n      });\n      nodePty = require(`${ptyTmpDir}/node_modules/node-pty-prebuilt`);\n    } catch (err) {\n      log.info(`Run ${chalk.cyan('npm -g install node-pty-prebuilt')} to install node pty`);\n      throw new Error('Package node-pty-prebuilt is required to use PEPK tool');\n    }\n  }\n  const ptySpawn = nodePty.spawn;\n  const encryptToolPath = path.join(UserSettings.dotExpoHomeDirectory(), 'android_tools_pepk.jar');\n  if (!fs.existsSync(encryptToolPath)) {\n    log.info(`Downloading PEPK tool from Google Play to ${encryptToolPath}`);\n    const downloadUrl =\n      'https://www.gstatic.com/play-apps-publisher-rapid/signing-tool/prod/pepk.jar';\n    const file = fs.createWriteStream(encryptToolPath);\n    const response = await axios({ url: downloadUrl, method: 'GET', responseType: 'stream' });\n    const bar = new ProgressBar('  downloading pepk tool [:bar] :rate/bps :percent :etas', {\n      complete: '=',\n      incomplete: ' ',\n      width: 40,\n      total: parseInt(response.headers['content-length'], 10),\n    });\n    response.data.pipe(file);\n    response.data.on('data', (chunk: any) => bar.tick(chunk.length));\n    await new Promise((resolve, reject) => {\n      file.on('finish', resolve);\n      file.on('error', reject);\n    });\n  }\n  try {\n    await new Promise((res, rej) => {\n      const child = ptySpawn(\n        javaExecutable,\n        [\n          '-jar',\n          encryptToolPath,\n          '--keystore',\n          keystorePath,\n          '--alias',\n          keyAlias,\n          '--output',\n          outputPath,\n          '--encryptionkey',\n          encryptionKey,\n        ],\n        {\n          name: 'pepk tool',\n          cols: 80,\n          rows: 30,\n          cwd: process.cwd(),\n          env: process.env,\n        }\n      );\n      child.on('error', (err: Error) => {\n        log.error('error', err);\n        rej(err);\n      });\n      child.on('exit', (exitCode: number) => {\n        if (exitCode !== 0) {\n          rej(exitCode);\n        } else {\n          res();\n        }\n      });\n      child.write(keystorePassword + NEWLINE);\n      child.write(keyPassword + NEWLINE);\n    });\n    log.info(`Exported and encrypted private App Signing Key to file ${outputPath}`);\n  } catch (error) {\n    throw new Error(`PEPK tool failed with return code ${error}`);\n  } finally {\n    fs.remove(ptyTmpDir);\n  }\n}\n\nexport async function logKeystoreHashes(\n  keystoreInfo: KeystoreInfo,\n  linePrefix: string = '',\n) {\n  const { keystorePath, keystorePassword, keyAlias } = keystoreInfo;\n  const certFile = `${keystorePath}.cer`;\n  try {\n    await exportCertBinary(keystoreInfo, certFile);\n    const data = await fs.readFile(certFile);\n    const googleHash = crypto\n      .createHash('sha1')\n      .update(data)\n      .digest('hex')\n      .toUpperCase();\n    const googleHash256 = crypto\n      .createHash('sha256')\n      .update(data)\n      .digest('hex')\n      .toUpperCase();\n    const fbHash = crypto\n      .createHash('sha1')\n      .update(data)\n      .digest('base64');\n    log.info(`${linePrefix}Google Certificate Fingerprint:     ${googleHash.replace(/(.{2}(?!$))/g, '$1:')}`);\n    log.info(`${linePrefix}Google Certificate Hash (SHA-1):    ${googleHash}`);\n    log.info(`${linePrefix}Google Certificate Hash (SHA-256):  ${googleHash256}`);\n    log.info(`${linePrefix}Facebook Key Hash:                  ${fbHash}`);\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      log.warn('Are you sure you have keytool installed?');\n      log.info('keytool is a part of OpenJDK: https://openjdk.java.net/');\n      log.info('Also make sure that keytool is in your PATH after installation.');\n    }\n    if (err.stdout) {\n      log.info(err.stdout);\n    }\n    if (err.stderr) {\n      log.error(err.stderr);\n    }\n    throw err;\n  } finally {\n    try {\n      await fs.unlink(certFile);\n    } catch (err) {\n      if (err.code !== 'ENOENT') {\n        log.error(err);\n      }\n    }\n  }\n}\n\nexport function logKeystoreCredentials(\n  { keystorePassword, keyAlias, keyPassword }: Keystore,\n  title: string = 'Keystore credentials',\n  linePrefix: string = '',\n) {\n  log.info(`${linePrefix}${title}\n${linePrefix}    Keystore password: ${chalk.bold(keystorePassword)}\n${linePrefix}    Key alias:         ${chalk.bold(keyAlias)}\n${linePrefix}    Key password:      ${chalk.bold(keyPassword)}\n  `);\n}\n\nexport async function createKeystore(\n  { keystorePath, keystorePassword, keyAlias, keyPassword }: KeystoreInfo,\n  androidPackage: string,\n): Promise<SpawnResult> {\n  try {\n    return await spawnAsync('keytool', [\n      '-genkey',\n      '-v',\n      '-storetype',\n      'JKS',\n      '-storepass',\n      keystorePassword,\n      '-keypass',\n      keyPassword,\n      '-keystore',\n      keystorePath,\n      '-alias',\n      keyAlias,\n      '-keyalg',\n      'RSA',\n      '-keysize',\n      '2048',\n      '-validity',\n      '10000',\n      '-dname',\n      `CN=${androidPackage},OU=,O=,L=,S=,C=US`,\n    ]);\n  } catch (error) {\n    if (error.code === 'ENOENT') {\n      log.warn('Are you sure you have keytool installed?');\n      log.info('keytool is a part of OpenJDK: https://openjdk.java.net/');\n      log.info('Also make sure that keytool is in your PATH after installation.');\n    }\n    throw error;\n  }\n}\n\nexport async function generateUploadKeystore(\n  uploadKeystorePath: string,\n  androidPackage: string,\n  experienceName: string,\n): Promise<KeystoreInfo> {\n  const keystoreData = {\n    keystorePassword: uuidv4().replace(/-/g, ''),\n    keyPassword: uuidv4().replace(/-/g, ''),\n    keyAlias: Buffer.from(experienceName).toString('base64'),\n    keystorePath: uploadKeystorePath,\n  };\n  await createKeystore(keystoreData, androidPackage);\n  return keystoreData;\n}\n"],"file":"../../credentials/AndroidCredentials.js","sourceRoot":"/@expo/xdl@56.2.1/src"}