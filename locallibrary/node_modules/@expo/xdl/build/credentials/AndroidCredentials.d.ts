import { SpawnResult } from '@expo/spawn-async';
export declare type Keystore = {
    keystore: string;
    keystorePassword: string;
    keyPassword: string;
    keyAlias: string;
};
declare type KeystoreInfo = {
    keystorePath: string;
    keystorePassword: string;
    keyPassword: string;
    keyAlias: string;
};
export declare function exportCertBinary({ keystorePath, keystorePassword, keyAlias }: KeystoreInfo, certFile: string): Promise<SpawnResult>;
export declare function exportCertBase64({ keystorePath, keystorePassword, keyAlias }: KeystoreInfo, certFile: string): Promise<SpawnResult>;
export declare function exportPrivateKey({ keystorePath, keystorePassword, keyAlias, keyPassword }: KeystoreInfo, encryptionKey: string, outputPath: string): Promise<void>;
export declare function logKeystoreHashes(keystoreInfo: KeystoreInfo, linePrefix?: string): Promise<void>;
export declare function logKeystoreCredentials({ keystorePassword, keyAlias, keyPassword }: Keystore, title?: string, linePrefix?: string): void;
export declare function createKeystore({ keystorePath, keystorePassword, keyAlias, keyPassword }: KeystoreInfo, androidPackage: string): Promise<SpawnResult>;
export declare function generateUploadKeystore(uploadKeystorePath: string, androidPackage: string, experienceName: string): Promise<KeystoreInfo>;
export {};
